// <auto-generated />
using System;
using AWS_E_Commerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AWS_E_Commerce.Migrations
{
    [DbContext(typeof(AWSDbContext))]
    partial class AWSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AWS_E_Commerce.Auth.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Men jeans ",
                            Price = 14.99m,
                            ProductCategoryId = 1,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/jeans.png",
                            color = "blue",
                            size = "34"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Men jeans shirt",
                            Price = 11.99m,
                            ProductCategoryId = 1,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/jeansShirt.png",
                            color = "jeans",
                            size = "L"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Men Suit",
                            Price = 99.99m,
                            ProductCategoryId = 1,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/MenSuits.png",
                            color = "vinous",
                            size = "52"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Women jeans ",
                            Price = 15.99m,
                            ProductCategoryId = 2,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/Wjens.png",
                            color = "blue",
                            size = "28"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Women White Stripe Longline Blouse ",
                            Price = 13.99m,
                            ProductCategoryId = 2,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/WhiteBlouse.png",
                            color = "white",
                            size = "M"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women's T-Shirts",
                            Price = 12.99m,
                            ProductCategoryId = 2,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/WomenT-Shirts.png",
                            color = "Pink",
                            size = "L"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fleece Bear",
                            Price = 14.99m,
                            ProductCategoryId = 3,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/FleeceBear.png",
                            color = "white",
                            size = "s"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Baby Jacket",
                            Price = 19.99m,
                            ProductCategoryId = 3,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/BabyJacket.png",
                            color = "Pink",
                            size = "S"
                        },
                        new
                        {
                            Id = 20,
                            Name = "baby set",
                            Price = 18.99m,
                            ProductCategoryId = 3,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/BabyJeans.png",
                            color = "jeans",
                            size = "L"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Men Suit",
                            Price = 99.99m,
                            ProductCategoryId = 4,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/MenSuits.png",
                            color = "vinous",
                            size = "52"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Fleece Bear",
                            Price = 14.99m,
                            ProductCategoryId = 4,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/FleeceBear.png",
                            color = "white",
                            size = "s"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Men SPORTS WEAR",
                            Price = 35.99m,
                            ProductCategoryId = 4,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/MenSPORTSWEAR.png",
                            color = "Black",
                            size = "L"
                        },
                        new
                        {
                            Id = 5,
                            Name = "white Bag",
                            Price = 12.99m,
                            ProductCategoryId = 5,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/whiteBAGS.png",
                            color = "white",
                            size = "N/A"
                        },
                        new
                        {
                            Id = 21,
                            Name = "BackPack",
                            Price = 18.99m,
                            ProductCategoryId = 5,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/BlackBag.png",
                            color = "Black",
                            size = "N/A"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Shoulder Bag ",
                            Price = 8.99m,
                            ProductCategoryId = 5,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/shoulderbag.png",
                            color = "offwhite",
                            size = "N/A"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Polo shirt",
                            Price = 11.99m,
                            ProductCategoryId = 6,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/poloB.png",
                            color = "Pink",
                            size = "L"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Boy Jacket",
                            Price = 28.99m,
                            ProductCategoryId = 6,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/boyj.png",
                            color = "Green and white",
                            size = "M"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Boy Suit",
                            Price = 65.99m,
                            ProductCategoryId = 6,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/BoyS.png",
                            color = "Navy blue",
                            size = "42"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Fleece Bear",
                            Price = 14.99m,
                            ProductCategoryId = 8,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/FleeceBear.png",
                            color = "white",
                            size = "s"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Boy Suit",
                            Price = 65.99m,
                            ProductCategoryId = 8,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/BoyS.png",
                            color = "Navy blue",
                            size = "42"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Dress ",
                            Price = 15.99m,
                            ProductCategoryId = 8,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/GirlsDress.png",
                            color = "blue",
                            size = "34"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dress ",
                            Price = 15.99m,
                            ProductCategoryId = 7,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/GirlsDress.png",
                            color = "blue",
                            size = "M"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Girl shirt",
                            Price = 16.99m,
                            ProductCategoryId = 7,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/girlsB.png",
                            color = "White and blue",
                            size = "L"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Girl Jacket",
                            Price = 29.99m,
                            ProductCategoryId = 7,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/GilrsJ.png",
                            color = "Black and white",
                            size = "S"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Men Shoes",
                            Price = 12.99m,
                            ProductCategoryId = 9,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/shos.png",
                            color = "white",
                            size = "41"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Women Shoes",
                            Price = 12.99m,
                            ProductCategoryId = 9,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/WomenShoes.png",
                            color = "Pink",
                            size = "37"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Child Sport Shoes",
                            Price = 12.99m,
                            ProductCategoryId = 9,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/ChildSportShoes.png",
                            color = "white",
                            size = "20"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Men SPORTS WEAR",
                            Price = 35.99m,
                            ProductCategoryId = 10,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/MenSPORTSWEAR.png",
                            color = "Black",
                            size = "L"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Women SPORTS WEAR",
                            Price = 32.99m,
                            ProductCategoryId = 10,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/WomenTrackSuits.jfif",
                            color = "Selver",
                            size = "M"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Child SPORTS WEAR",
                            Price = 18.99m,
                            ProductCategoryId = 10,
                            ProductImage = "https://sultan.blob.core.windows.net/attac/KidsSPORTSWEAR.png",
                            color = "vinous",
                            size = "S"
                        });
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "MEN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "WOMEN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BABY"
                        },
                        new
                        {
                            Id = 4,
                            Name = "NEW ARRIVALS"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BAGS"
                        },
                        new
                        {
                            Id = 6,
                            Name = "BOYS"
                        },
                        new
                        {
                            Id = 7,
                            Name = "GIRLS"
                        },
                        new
                        {
                            Id = 8,
                            Name = "BUY 1 GET 1 FREE"
                        },
                        new
                        {
                            Id = 9,
                            Name = "SHOES"
                        },
                        new
                        {
                            Id = 10,
                            Name = "SPORTSWEAR"
                        });
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "administrator",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "editor",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Editor",
                            NormalizedName = "EDITOR"
                        },
                        new
                        {
                            Id = "customer",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "permissions",
                            ClaimValue = "Administrator",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "permissions",
                            ClaimValue = "Editor",
                            RoleId = "administrator"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "permissions",
                            ClaimValue = "Editor",
                            RoleId = "editor"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "permissions",
                            ClaimValue = "Customer",
                            RoleId = "customer"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.Order", b =>
                {
                    b.HasOne("AWS_E_Commerce.Auth.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.OrderItem", b =>
                {
                    b.HasOne("AWS_E_Commerce.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWS_E_Commerce.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.Product", b =>
                {
                    b.HasOne("AWS_E_Commerce.Models.ProductCategory", "ProductCategory")
                        .WithMany("products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("AWS_E_Commerce.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AWS_E_Commerce.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AWS_E_Commerce.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AWS_E_Commerce.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AWS_E_Commerce.Auth.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("AWS_E_Commerce.Models.ProductCategory", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
